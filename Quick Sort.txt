n.log n

def quickSort(alist):
    quickSortHelper(alist,0,len(alist)-1)

def quickSortHelper(alist,first,last):
    splitpoint = partition(alist,first,last)
    quicksortHelper(alist,first,splitpoint-1)
    quicksortHelper(alist,splitpoint+1,last)

def partition(alist,first,last):
    pivotvalue = alist[first]
    leftmark = first + 1
    rightmark = last
    done = False

    while not done:
        while leftmark <= rightmark and alist[leftmark] <= pivotvalue:
	    leftmark += 1
        while rightmark >= leftmark and alist[rightmark] >= pivotvalue:
	    rightmark -= 1
	if leftmark < rightmark:
	    done = True
	else:
	    temp = alist[leftmark]
	    alist[leftmark] = alist[rightmark]
	    alist[rightmark] = temp
    temp = alist[first]
    alist[first] = alist[rightmark]
    alist[rightmark] = temp
    return rightmark